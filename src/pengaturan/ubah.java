/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pengaturan;

import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Types;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author HP
 */
public class ubah extends javax.swing.JFrame {

    /**
     * Creates new form ubah
     */
    
    ArrayList<String> meja = new ArrayList<String>();
    ArrayList<String> idKategori = new ArrayList<String>();
    ArrayList<String> kategori = new ArrayList<String>();
    ArrayList<String> kode = new ArrayList<String>();
    ArrayList<String> menu = new ArrayList<String>();
    
    String idKategoriMenu = null;
    
    public ubah() {

        initComponents();
        setLocationRelativeTo(null);
        
        tampilkanData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        utamaPanel = new javax.swing.JPanel();
        judulPanel = new javax.swing.JPanel();
        judulLabel = new javax.swing.JLabel();
        mejaPanel = new javax.swing.JPanel();
        mejaComboBox = new javax.swing.JComboBox<>();
        mejaText = new javax.swing.JTextField();
        ubahmejaButton = new javax.swing.JButton();
        menuPanel = new javax.swing.JPanel();
        kategorilamaComboBox = new javax.swing.JComboBox<>();
        menuComboBox = new javax.swing.JComboBox<>();
        menuText = new javax.swing.JTextField();
        hargaText = new javax.swing.JTextField();
        hargaLabel = new javax.swing.JLabel();
        ubahmenuButton = new javax.swing.JButton();
        kembaliButton = new javax.swing.JButton();
        kategoriPanel2 = new javax.swing.JPanel();
        kategoriComboBox = new javax.swing.JComboBox<>();
        kategoriText = new javax.swing.JTextField();
        ubahkategoriButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        utamaPanel.setBackground(new java.awt.Color(10, 4, 60));

        judulPanel.setBackground(new java.awt.Color(255, 255, 255));

        judulLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        judulLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        judulLabel.setText("PENGATURAN UBAH");

        javax.swing.GroupLayout judulPanelLayout = new javax.swing.GroupLayout(judulPanel);
        judulPanel.setLayout(judulPanelLayout);
        judulPanelLayout.setHorizontalGroup(
            judulPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(judulLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        judulPanelLayout.setVerticalGroup(
            judulPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(judulLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
        );

        mejaPanel.setBackground(new java.awt.Color(128, 255, 219));

        mejaComboBox.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        mejaText.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        mejaText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mejaTextActionPerformed(evt);
            }
        });
        mejaText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                mejaTextKeyTyped(evt);
            }
        });

        ubahmejaButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ubahmejaButton.setText("UBAH");
        ubahmejaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ubahmejaButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mejaPanelLayout = new javax.swing.GroupLayout(mejaPanel);
        mejaPanel.setLayout(mejaPanelLayout);
        mejaPanelLayout.setHorizontalGroup(
            mejaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mejaPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mejaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mejaPanelLayout.createSequentialGroup()
                        .addComponent(mejaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mejaText, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mejaPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(ubahmejaButton)))
                .addContainerGap())
        );
        mejaPanelLayout.setVerticalGroup(
            mejaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mejaPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mejaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(mejaComboBox, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(mejaText))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ubahmejaButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        menuPanel.setBackground(new java.awt.Color(128, 255, 219));

        kategorilamaComboBox.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        kategorilamaComboBox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                kategorilamaComboBoxFocusGained(evt);
            }
        });
        kategorilamaComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kategorilamaComboBoxActionPerformed(evt);
            }
        });

        menuComboBox.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        menuComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuComboBoxActionPerformed(evt);
            }
        });

        menuText.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        menuText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                menuTextKeyTyped(evt);
            }
        });

        hargaText.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        hargaText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                hargaTextKeyTyped(evt);
            }
        });

        hargaLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        hargaLabel.setText("HARGA");

        ubahmenuButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ubahmenuButton.setText("UBAH");
        ubahmenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ubahmenuButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout menuPanelLayout = new javax.swing.GroupLayout(menuPanel);
        menuPanel.setLayout(menuPanelLayout);
        menuPanelLayout.setHorizontalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(ubahmenuButton))
                    .addGroup(menuPanelLayout.createSequentialGroup()
                        .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(kategorilamaComboBox, 0, 194, Short.MAX_VALUE)
                            .addComponent(menuText))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(menuPanelLayout.createSequentialGroup()
                                .addComponent(hargaLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(hargaText))
                            .addGroup(menuPanelLayout.createSequentialGroup()
                                .addComponent(menuComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        menuPanelLayout.setVerticalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(kategorilamaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(menuComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hargaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hargaText, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(menuText, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ubahmenuButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        kembaliButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        kembaliButton.setText("KEMBALI");
        kembaliButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kembaliButtonActionPerformed(evt);
            }
        });

        kategoriPanel2.setBackground(new java.awt.Color(128, 255, 219));

        kategoriComboBox.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        kategoriComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kategoriComboBoxActionPerformed(evt);
            }
        });

        kategoriText.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        kategoriText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kategoriTextActionPerformed(evt);
            }
        });
        kategoriText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                kategoriTextKeyTyped(evt);
            }
        });

        ubahkategoriButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ubahkategoriButton.setText("UBAH");
        ubahkategoriButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ubahkategoriButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout kategoriPanel2Layout = new javax.swing.GroupLayout(kategoriPanel2);
        kategoriPanel2.setLayout(kategoriPanel2Layout);
        kategoriPanel2Layout.setHorizontalGroup(
            kategoriPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kategoriPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(kategoriPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kategoriPanel2Layout.createSequentialGroup()
                        .addComponent(kategoriComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(kategoriText, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kategoriPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(ubahkategoriButton)))
                .addContainerGap())
        );
        kategoriPanel2Layout.setVerticalGroup(
            kategoriPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kategoriPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(kategoriPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(kategoriComboBox, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(kategoriText))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ubahkategoriButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout utamaPanelLayout = new javax.swing.GroupLayout(utamaPanel);
        utamaPanel.setLayout(utamaPanelLayout);
        utamaPanelLayout.setHorizontalGroup(
            utamaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(utamaPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(utamaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(judulPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(utamaPanelLayout.createSequentialGroup()
                        .addGroup(utamaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mejaPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(menuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(kategoriPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, utamaPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(kembaliButton)))
                .addContainerGap())
        );
        utamaPanelLayout.setVerticalGroup(
            utamaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(utamaPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(judulPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mejaPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(kategoriPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(menuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(kembaliButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(utamaPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(utamaPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void kembaliButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kembaliButtonActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new pengaturan().setVisible(true);
    }//GEN-LAST:event_kembaliButtonActionPerformed

    private void ubahmejaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ubahmejaButtonActionPerformed
        // TODO add your handling code here:
        String MejaLama = mejaComboBox.getSelectedItem().toString();
        String updateMeja = mejaText.getText();
        if(updateMeja.isEmpty()){
            JOptionPane.showMessageDialog(null, "Input tidak boleh kosong","Peringatan", JOptionPane.ERROR_MESSAGE);
        }else{
            try {
                Connection cn = DriverManager.getConnection("jdbc:mysql://localhost:3308/db_kasirrestoranswing", "root", "");
                PreparedStatement ps = cn.prepareStatement("update tb_meja set meja=? where meja=?");
                ps.setString(1, updateMeja);
                ps.setString(2, MejaLama);
                ps.executeUpdate();
                cn.close();
                JOptionPane.showMessageDialog(null, "Ubah meja berhasil","Pesan", JOptionPane.OK_OPTION);
                hapusData();
                tampilkanData();
                mejaText.setText("");
            } catch (Exception ex) {
                Logger.getLogger(ubah.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Koneksi Ke Database MySql Tidak Berhasil","Peringatan", JOptionPane.ERROR_MESSAGE);
            }
        }
        
    }//GEN-LAST:event_ubahmejaButtonActionPerformed

    private void mejaTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mejaTextKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        
        if( ((Character.isAlphabetic(c))) || ((Character.isDigit(c))) || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE || c == KeyEvent.VK_SPACE){
            
        }else{
            JOptionPane.showMessageDialog(this, "Input hanya dapat huruf, angka dan spasi");
            evt.consume();
        }
    }//GEN-LAST:event_mejaTextKeyTyped

    private void kategoriTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_kategoriTextKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        
        if( ((Character.isAlphabetic(c))) || ((Character.isDigit(c))) || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE || c == KeyEvent.VK_SPACE){
            
        }else{
            JOptionPane.showMessageDialog(this, "Input hanya dapat huruf, angka dan spasi");
            evt.consume();
        }
    }//GEN-LAST:event_kategoriTextKeyTyped

    private void menuTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_menuTextKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        
        if( ((Character.isAlphabetic(c))) || ((Character.isDigit(c))) || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE || c == KeyEvent.VK_SPACE){
            
        }else{
            JOptionPane.showMessageDialog(this, "Input hanya dapat huruf, angka dan spasi");
            evt.consume();
        }
    }//GEN-LAST:event_menuTextKeyTyped

    private void hargaTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_hargaTextKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        
        if(((Character.isDigit(c))) || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE){
            
        }else{
            JOptionPane.showMessageDialog(this, "Input hanya dapat angka");
            evt.consume();
        }
    }//GEN-LAST:event_hargaTextKeyTyped

    private void ubahkategoriButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ubahkategoriButtonActionPerformed
        // TODO add your handling code here:
        String KategoriLama = kategoriComboBox.getSelectedItem().toString();
        String updateKategori = kategoriText.getText();
        if(updateKategori.isEmpty()){
            JOptionPane.showMessageDialog(null, "Input tidak boleh kosong","Peringatan", JOptionPane.ERROR_MESSAGE);
        }else{
            try {
                Connection cn = DriverManager.getConnection("jdbc:mysql://localhost:3308/db_kasirrestoranswing", "root", "");
                PreparedStatement ps = cn.prepareStatement("update tb_kategori set kategori=? where kategori=?");
                ps.setString(1, updateKategori);
                ps.setString(2, KategoriLama);
                ps.executeUpdate();
                cn.close();
                JOptionPane.showMessageDialog(null, "Ubah kategori berhasil","Pesan", JOptionPane.OK_OPTION);
                hapusData();
                tampilkanData();
                kategoriText.setText("");
            } catch (Exception ex) {
                Logger.getLogger(ubah.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Koneksi Ke Database MySql Tidak Berhasil","Peringatan", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_ubahkategoriButtonActionPerformed

    private void kategorilamaComboBoxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_kategorilamaComboBoxFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_kategorilamaComboBoxFocusGained

    private void ubahmenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ubahmenuButtonActionPerformed
        // TODO add your handling code here:
        
        String KategoriBaru = kategorilamaComboBox.getSelectedItem().toString();
        int indeksKategori = kategori.indexOf(KategoriBaru);
        int updateIdKategori = Integer.parseInt(idKategori.get(indeksKategori));
        
        
        String updateMenu = menuText.getText();
        
        String namaMenu = menuComboBox.getSelectedItem().toString();
        
        Long updateHarga = Long.parseLong(hargaText.getText());
        try {
            Connection cn = DriverManager.getConnection("jdbc:mysql://localhost:3308/db_kasirrestoranswing", "root", "");
            PreparedStatement ps = cn.prepareStatement("update tb_menu set id_kategori=?, menu=?, harga=? where menu=?");
            ps.setInt(1, updateIdKategori);
            ps.setString(2, updateMenu);
            ps.setLong(3, updateHarga);
            ps.setString(4, namaMenu);
            ps.executeUpdate();
            cn.close();
            JOptionPane.showMessageDialog(null, "Ubah menu berhasil","Pesan", JOptionPane.OK_OPTION);
            hapusData();
            tampilkanData();
            kategoriText.setText("");
        } catch (Exception ex) {
            Logger.getLogger(ubah.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Koneksi Ke Database MySql Tidak Berhasil","Peringatan", JOptionPane.ERROR_MESSAGE);
        }
        
        try {
            Connection cn = DriverManager.getConnection("jdbc:mysql://localhost:3308/db_kasirrestoranswing", "root", "");
            PreparedStatement ps = cn.prepareStatement("update tb_menu_rekap set id_kategori_rekap=?, menu=?, harga=? where menu=?");
            ps.setInt(1, updateIdKategori);
            ps.setString(2, updateMenu);
            ps.setLong(3, updateHarga);
            ps.setString(4, namaMenu);
            ps.executeUpdate();
            cn.close();
        } catch (Exception ex) {
            Logger.getLogger(ubah.class.getName()).log(Level.SEVERE, null, ex);

        }
        
    }//GEN-LAST:event_ubahmenuButtonActionPerformed

    private void kategorilamaComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kategorilamaComboBoxActionPerformed
        // TODO add your handling code here:
        try {
            Connection cn = DriverManager.getConnection("jdbc:mysql://localhost:3308/db_kasirrestoranswing", "root", "");
            ResultSet rs = cn.createStatement().executeQuery("SELECT * FROM tb_kategori"); 
            String pilihanKategori = kategorilamaComboBox.getSelectedItem().toString();
            while(rs.next()){
                if(pilihanKategori.equals(rs.getString(2))){
                    idKategoriMenu = rs.getString(1);
                }
            }
        } catch (Exception ex) {
            //Logger.getLogger(kasir.class.getName()).log(Level.SEVERE, null, ex);
        }
        menuComboBox.removeAllItems();
        tampilkanMenu();
    }//GEN-LAST:event_kategorilamaComboBoxActionPerformed

    private void kategoriComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kategoriComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_kategoriComboBoxActionPerformed

    private void menuComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuComboBoxActionPerformed
        // TODO add your handling code here:
        try {
            Connection cn = DriverManager.getConnection("jdbc:mysql://localhost:3308/db_kasirrestoranswing", "root", "");
            ResultSet rs = cn.createStatement().executeQuery("SELECT * FROM tb_menu"); 
            String pilihanMenu = menuComboBox.getSelectedItem().toString();
            
            while(rs.next()){
                if(pilihanMenu.equals(rs.getString(4))){
                    hargaText.setText(rs.getString(5));
                    menuText.setText(rs.getString(4));
                }
            }
        } catch (Exception ex) {
            //Logger.getLogger(kasir.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_menuComboBoxActionPerformed

    private void mejaTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mejaTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mejaTextActionPerformed

    private void kategoriTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kategoriTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_kategoriTextActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ubah.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ubah.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ubah.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ubah.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ubah().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel hargaLabel;
    private javax.swing.JTextField hargaText;
    private javax.swing.JLabel judulLabel;
    private javax.swing.JPanel judulPanel;
    private javax.swing.JComboBox<String> kategoriComboBox;
    private javax.swing.JPanel kategoriPanel2;
    private javax.swing.JTextField kategoriText;
    private javax.swing.JComboBox<String> kategorilamaComboBox;
    private javax.swing.JButton kembaliButton;
    private javax.swing.JComboBox<String> mejaComboBox;
    private javax.swing.JPanel mejaPanel;
    private javax.swing.JTextField mejaText;
    private javax.swing.JComboBox<String> menuComboBox;
    private javax.swing.JPanel menuPanel;
    private javax.swing.JTextField menuText;
    private javax.swing.JButton ubahkategoriButton;
    private javax.swing.JButton ubahmejaButton;
    private javax.swing.JButton ubahmenuButton;
    private javax.swing.JPanel utamaPanel;
    // End of variables declaration//GEN-END:variables

    private void hapusData(){
        mejaComboBox.removeAllItems();
        kategoriComboBox.removeAllItems();
        kategorilamaComboBox.removeAllItems();
        menuComboBox.removeAllItems();
    }
    
    private void tampilkanData(){
        tampilkanMeja();
        tampilkanKategori();
        tampilkanMenu();
    }

    private void tampilkanMeja() {
        try {
            Connection cn = DriverManager.getConnection("jdbc:mysql://localhost:3308/db_kasirrestoranswing", "root", "");
            ResultSet rs = cn.createStatement().executeQuery("SELECT * FROM tb_meja");

            while(rs.next()){
                meja.add(rs.getString(2));
                mejaComboBox.addItem(rs.getString(2));
            }
            
            cn.close();
        } catch (Exception ex) {
            Logger.getLogger(ubah.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Koneksi Ke Database MySql Tidak Berhasil","Peringatan", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void tampilkanKategori() {
        try {
            Connection cn = DriverManager.getConnection("jdbc:mysql://localhost:3308/db_kasirrestoranswing", "root", "");
            ResultSet rs = cn.createStatement().executeQuery("SELECT * FROM tb_kategori");

            while(rs.next()){
                idKategori.add(rs.getString(1));
                kategoriComboBox.addItem(rs.getString(2));
                kategorilamaComboBox.addItem(rs.getString(2));
                kategori.add(rs.getString(2));
            }
            rs.beforeFirst();
            String pilihanKategori = kategoriComboBox.getSelectedItem().toString();
            
            while(rs.next()){
                if(pilihanKategori.equals(rs.getString(2))){
                    idKategoriMenu = rs.getString(1);
                }
            }
            cn.close();
        } catch (Exception ex) {
            Logger.getLogger(ubah.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Koneksi Ke Database MySql Tidak Berhasil","Peringatan", JOptionPane.ERROR_MESSAGE);
        }
    }


    private void tampilkanMenu() {
        try {
            Connection cn = DriverManager.getConnection("jdbc:mysql://localhost:3308/db_kasirrestoranswing", "root", "");
            ResultSet rs = cn.createStatement().executeQuery("SELECT * FROM tb_menu");
            
            menuComboBox.removeAllItems();
            while(rs.next()){
                if(idKategoriMenu.equals(rs.getString(2))){
                    menuComboBox.addItem(rs.getString(4));
                }
            }
            
            rs.beforeFirst();
            String pilihanMenu = menuComboBox.getSelectedItem().toString();
            
            while(rs.next()){
                if(pilihanMenu.equals(rs.getString(4))){
                    hargaText.setText(rs.getString(5));
                    menuText.setText(rs.getString(4));
                }
            }
            
            cn.close();
        } catch (Exception ex) {
            Logger.getLogger(ubah.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Koneksi Ke Database MySql Tidak Berhasil","Peringatan", JOptionPane.ERROR_MESSAGE);
        }
    }
}
